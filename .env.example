# 📋 EleKnowledge-AI 環境変数テンプレート
# 
# このファイルは環境変数のテンプレートです。
# 実際の値は .env ファイルに記載してください。
# .env ファイルは .gitignore に含まれているため、Gitにコミットされません。
#
# セットアップ手順:
# 1. このファイルを .env にコピー: cp .env.example .env
# 2. 各環境変数に実際の値を設定
# 3. .env ファイルは絶対にGitにコミットしないこと

# ==============================================================================
# AWS 基本設定
# ==============================================================================

# AWSリージョン（us-east-1で確定）
AWS_REGION=us-east-1

# AWSアカウントID（12桁の数字）
AWS_ACCOUNT_ID=123456789012

# ==============================================================================
# Amazon Cognito 設定
# ==============================================================================

# Cognito User Pool ID
# 例: us-east-1_XXXXXXXXX
COGNITO_USER_POOL_ID=us-east-1_XXXXXXXXX

# Cognito User Pool Client ID
COGNITO_CLIENT_ID=XXXXXXXXXXXXXXXXXXXXXXXXXX

# Cognito Identity Pool ID（オプション）
COGNITO_IDENTITY_POOL_ID=us-east-1:XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX

# Cognito User Pool Domain（オプション、カスタムドメイン使用時）
# COGNITO_DOMAIN=eleknowledge-ai

# ==============================================================================
# Amazon Bedrock 設定
# ==============================================================================

# Bedrock Knowledge Base ID
BEDROCK_KB_ID=KB_ELEKNOWLEDGE_001

# Bedrock Model ID（Claude 4）
BEDROCK_MODEL_ID=anthropic.claude-sonnet-4-20250514-v1:0

# Bedrock Agent ID（Phase 3で使用）
# BEDROCK_AGENT_ID=AGENT_TROUBLE_001

# Bedrock Agent Alias ID（Phase 3で使用）
# BEDROCK_AGENT_ALIAS_ID=ALIAS_TROUBLE_001

# ==============================================================================
# Amazon DynamoDB 設定
# ==============================================================================

# ユーザーテーブル名
DYNAMODB_USERS_TABLE=eleknowledge-users

# チャットログテーブル名
DYNAMODB_CHATLOGS_TABLE=eleknowledge-chatlogs

# IPホワイトリストテーブル名（オプション）
# DYNAMODB_IP_WHITELIST_TABLE=eleknowledge-ip-whitelist

# ==============================================================================
# Amazon S3 設定
# ==============================================================================

# ドキュメント保管バケット（Knowledge Base用）
S3_DOCUMENTS_BUCKET=eleknowledge-documents

# 一時アップロードバケット
S3_UPLOADS_BUCKET=eleknowledge-uploads

# S3バケットリージョン（通常はAWS_REGIONと同じ）
S3_REGION=us-east-1

# ==============================================================================
# Amazon API Gateway 設定
# ==============================================================================

# 認証API エンドポイント
API_GATEWAY_AUTH_URL=https://xxxxxx.execute-api.us-east-1.amazonaws.com/prod

# RAG処理API エンドポイント
API_GATEWAY_RAG_URL=https://yyyyyy.execute-api.us-east-1.amazonaws.com/prod

# チャット管理API エンドポイント
API_GATEWAY_CHAT_URL=https://zzzzzz.execute-api.us-east-1.amazonaws.com/prod

# API Gateway ステージ名
API_GATEWAY_STAGE=prod

# ==============================================================================
# AWS Lambda 設定
# ==============================================================================

# Lambda関数タイムアウト（秒）
LAMBDA_TIMEOUT=30

# Lambda関数メモリサイズ（MB）
LAMBDA_MEMORY_SIZE=512

# ==============================================================================
# セキュリティ設定
# ==============================================================================

# セッションシークレット（本番環境では強力なランダム文字列を使用）
# 生成方法: openssl rand -base64 32
SESSION_SECRET=CHANGE_ME_IN_PRODUCTION_USE_RANDOM_STRING

# JWTシークレット（本番環境では強力なランダム文字列を使用）
# 生成方法: openssl rand -base64 32
JWT_SECRET=CHANGE_ME_IN_PRODUCTION_USE_RANDOM_STRING

# トークン有効期限（秒）
ACCESS_TOKEN_EXPIRY=3600          # 1時間
REFRESH_TOKEN_EXPIRY=2592000      # 30日

# ==============================================================================
# アプリケーション設定
# ==============================================================================

# アプリケーション環境（development / production）
NODE_ENV=development

# Next.js アプリケーションURL
NEXT_PUBLIC_APP_URL=http://localhost:3000

# API ベースURL（開発環境）
NEXT_PUBLIC_API_BASE_URL=http://localhost:3000/api

# ==============================================================================
# 機能フラグ
# ==============================================================================

# トラブルシューティング機能の有効化（Phase 3）
FEATURE_TROUBLESHOOTING_ENABLED=false

# 品質書類チェック機能の有効化（Phase 3）
FEATURE_QUALITY_CHECK_ENABLED=false

# デバッグモードの有効化
DEBUG_MODE=false

# ==============================================================================
# データライフサイクル設定
# ==============================================================================

# チャット履歴の保管期間（日数）
CHAT_HISTORY_RETENTION_DAYS=30

# 一時ファイルの保管期間（時間）
TEMP_FILE_RETENTION_HOURS=24

# ==============================================================================
# レート制限設定
# ==============================================================================

# API レート制限（リクエスト数/秒）
RATE_LIMIT_AUTH_API=10
RATE_LIMIT_RAG_API=5
RATE_LIMIT_CHAT_API=10

# WAF レート制限（リクエスト数/5分）
WAF_RATE_LIMIT_PER_IP=500
WAF_RATE_LIMIT_GLOBAL=2000

# ==============================================================================
# ログ設定
# ==============================================================================

# ログレベル（debug / info / warn / error）
LOG_LEVEL=info

# CloudWatch Logs グループ名
CLOUDWATCH_LOG_GROUP=/aws/eleknowledge-ai

# ログ保管期間（日数）
LOG_RETENTION_DAYS=30

# ==============================================================================
# 監視・アラート設定
# ==============================================================================

# アラート通知先メールアドレス
ALERT_EMAIL=alert@example.com

# Slack Webhook URL（オプション）
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/XXXXX/XXXXX/XXXXX

# ==============================================================================
# 本番環境のみの設定
# ==============================================================================

# カスタムドメイン（本番環境）
# CUSTOM_DOMAIN=eleknowledge-ai.yourdomain.com

# SSL証明書ARN（本番環境）
# SSL_CERTIFICATE_ARN=arn:aws:acm:us-east-1:ACCOUNT_ID:certificate/XXXXX

# ==============================================================================
# 開発環境のみの設定
# ==============================================================================

# ローカル開発用のモックデータ使用フラグ
USE_MOCK_DATA=false

# ローカル開発用のBedrockモック
MOCK_BEDROCK_ENABLED=false

# ==============================================================================
# Phase 3 新機能設定（後日追加予定）
# ==============================================================================

# トラブルシューティング機能設定
# TROUBLESHOOTING_MAX_RETRY=3
# TROUBLESHOOTING_TIMEOUT=60

# 品質書類チェック機能設定
# QUALITY_CHECK_MAX_FILE_SIZE=10485760  # 10MB
# QUALITY_CHECK_SUPPORTED_FORMATS=jpg,jpeg,png,pdf

# ==============================================================================
# 注意事項
# ==============================================================================
#
# 1. 本番環境では必ず強力なランダム文字列をセキュリティ設定に使用すること
# 2. すべての機密情報は AWS Secrets Manager で管理することを推奨
# 3. このファイル（.env.example）はGitにコミット可能
# 4. 実際の値を含む .env ファイルは絶対にGitにコミットしないこと
# 5. 環境変数の変更後は、アプリケーションの再起動が必要
#
# ==============================================================================
